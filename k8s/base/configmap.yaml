apiVersion: v1
kind: ConfigMap
metadata:
  name: medical-inventory-config
  namespace: medical-inventory
  labels:
    app.kubernetes.io/name: medical-inventory
    app.kubernetes.io/component: config
data:
  LOG_LEVEL: "INFO"
  MODEL_PATH: "/app/models"
  WORKERS: "4"
  REDIS_URL: "redis://redis-service:6379"
  PROMETHEUS_MULTIPROC_DIR: "/tmp"
  
  # Nginx configuration
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        
        upstream api_backend {
            least_conn;
            server api-service:8000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        upstream websocket_backend {
            least_conn;
            server websocket-service:8001 max_fails=3 fail_timeout=30s;
        }
        
        server {
            listen 80;
            server_name _;
            client_max_body_size 50M;
            
            location /health {
                proxy_pass http://api_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                access_log off;
            }
            
            location /api/ {
                proxy_pass http://api_backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_connect_timeout 30s;
                proxy_send_timeout 300s;
                proxy_read_timeout 300s;
            }
            
            location /ws {
                proxy_pass http://websocket_backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_read_timeout 86400s;
                proxy_send_timeout 86400s;
            }
            
            location / {
                proxy_pass http://api_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }

  # Prometheus configuration
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    scrape_configs:
      - job_name: 'medical-inventory-api'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - medical-inventory
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: api-service
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: http
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        - source_labels: [__meta_kubernetes_service_name]
          target_label: service
        
      - job_name: 'medical-inventory-websocket'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - medical-inventory
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: websocket-service
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: medical-inventory
  labels:
    app.kubernetes.io/name: medical-inventory
    app.kubernetes.io/component: monitoring
data:
  grafana.ini: |
    [server]
    http_port = 3000
    domain = localhost
    
    [security]
    admin_user = admin
    admin_password = admin123
    
    [users]
    allow_sign_up = false
    
    [auth.anonymous]
    enabled = false
    
    [dashboards]
    default_home_dashboard_path = /var/lib/grafana/dashboards/api-dashboard.json