apiVersion: apps/v1
kind: Deployment
metadata:
  name: websocket
  namespace: medical-inventory
  labels:
    app.kubernetes.io/name: websocket
    app.kubernetes.io/component: websocket
    app.kubernetes.io/part-of: medical-inventory
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: websocket
      app.kubernetes.io/component: websocket
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: websocket
        app.kubernetes.io/component: websocket
        app.kubernetes.io/part-of: medical-inventory
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      imagePullSecrets:
      - name: registry-secret
      containers:
      - name: websocket
        image: medical-inventory:latest
        imagePullPolicy: IfNotPresent
        command: ["python3", "websocket_server.py"]
        ports:
        - containerPort: 8001
          name: websocket
          protocol: TCP
        env:
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: medical-inventory-config
              key: REDIS_URL
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: medical-inventory-config
              key: LOG_LEVEL
        - name: MODEL_PATH
          valueFrom:
            configMapKeyRef:
              name: medical-inventory-config
              key: MODEL_PATH
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          tcpSocket:
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: models-volume
          mountPath: /app/models
          readOnly: true
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: models-volume
        persistentVolumeClaim:
          claimName: models-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: websocket-service
  namespace: medical-inventory
  labels:
    app.kubernetes.io/name: websocket
    app.kubernetes.io/component: websocket
    app.kubernetes.io/part-of: medical-inventory
spec:
  ports:
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: websocket
  selector:
    app.kubernetes.io/name: websocket
    app.kubernetes.io/component: websocket
  type: ClusterIP
  sessionAffinity: ClientIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: websocket-hpa
  namespace: medical-inventory
  labels:
    app.kubernetes.io/name: websocket
    app.kubernetes.io/component: websocket
    app.kubernetes.io/part-of: medical-inventory
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: websocket
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30